#!/bin/bash

indent() {
  sed -u 's/^/       /'
}

echo "-----> Installing ImageMagick 6"

BUILD_DIR=$1
CACHE_DIR=$2

IMAGE_MAGICK_VERSION=6.9.7-4

VENDOR_DIR="$BUILD_DIR/vendor"
IMAGE_MAGICK_INSTALL_DIR="$VENDOR_DIR/imagemagick"
IMAGE_MAGICK_CACHE_FILE="$CACHE_DIR/imagemagick-$IMAGE_MAGICK_VERSION.tar.gz"

if [ ! -d $CACHE_DIR ]; then
  mkdir -p $CACHE_DIR
fi

if [ ! -d $VENDOR_DIR ]; then
  mkdir -p $VENDOR_DIR
fi

if [ ! -f $IMAGE_MAGICK_CACHE_FILE ]; then
  echo "-----> Building ImageMagick"
  # Install ImageMagick
  wget https://github.com/ImageMagick/ImageMagick6/archive/refs/tags/${IMAGE_MAGICK_VERSION}.tar.gz -P $BUILD_DIR -O $BUILD_DIR/imagemagick.tar.gz | indent
  tar -xvf $BUILD_DIR/imagemagick.tar.gz --directory $BUILD_DIR | indent
  cd $BUILD_DIR/ImageMagick6-${IMAGE_MAGICK_VERSION}

  if [ ! -d $BUILD_DIR/ImageMagick6-${IMAGE_MAGICK_VERSION} ]; then
    echo "Error: Unable to download and extract ImageMagick" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi

  export CPPFLAGS="-I$IMAGE_MAGICK_INSTALL_DIR/include"
  export LDFLAGS="-L$IMAGE_MAGICK_INSTALL_DIR/lib"
  ./configure --without-magick-plus-plus --disable-docs --prefix=$IMAGE_MAGICK_INSTALL_DIR
  make && make install
  # ldconfig /usr/local/lib
  cd ..
  rm -rf ImageMagick6-${IMAGE_MAGICK_VERSION}

  if [ ! -d $IMAGE_MAGICK_INSTALL_DIR ]; then
    echo "Error: Unable to build ImageMagick" | indent
    ls $VENDOR_DIR | indent
    exit 1;
  fi

  # Copy delegate file
  cp $IMAGE_MAGICK_INSTALL_DIR/etc/ImageMagick-6/delegates.xml $IMAGE_MAGICK_INSTALL_DIR/delegates.xml

  # cache for future deploys
  echo "-----> Caching ImageMagick installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="imagemagick"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $IMAGE_MAGICK_CACHE_FILE
else
  # cache exists, extract it
  echo "-----> Extracting ImageMagick $IMAGE_MAGICK_CACHE_FILE => $VENDOR_DIR"
  mkdir -p $VENDOR_DIR
  tar xzf $IMAGE_MAGICK_CACHE_FILE -C $VENDOR_DIR
fi

# Update Policy even if cached
read -r -d '' IM6POLICY <<'EOF'
<policymap>
  <policy domain="resource" name="memory" value="2GiB"/>
  <policy domain="resource" name="map" value="1GiB"/>
  <policy domain="resource" name="width" value="20KP"/>
  <policy domain="resource" name="height" value="20KP"/>
  <policy domain="resource" name="area" value="256MB"/>
  <policy domain="resource" name="disk" value="1GiB"/>
  <policy domain="resource" name="thread" value="4"/>
  <policy domain="resource" name="throttle" value="0"/>
  <policy domain="delegate" rights="none" pattern="URL" />
  <policy domain="delegate" rights="none" pattern="HTTPS" />
  <policy domain="delegate" rights="none" pattern="HTTP" />
  <policy domain="path" rights="none" pattern="@*"/>
  <policy domain="cache" name="shared-secret" value="passphrase" stealth="true"/>
</policymap>
EOF

if [ ! -d $IMAGE_MAGICK_INSTALL_DIR/etc/ImageMagick-6 ]; then
    mkdir -p $IMAGE_MAGICK_INSTALL_DIR/etc/ImageMagick-6
fi

echo "$IM6POLICY" > $IMAGE_MAGICK_INSTALL_DIR/etc/ImageMagick-6/policy.xml

# Update PATH and LD_LIBRARY_PATH
echo "-----> Updating environment variables"
PROFILE_PATH="$BUILD_DIR/.profile.d/imagemagick.sh"
ACTUAL_INSTALL_PATH="$HOME/vendor/imagemagick"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PATH=$ACTUAL_INSTALL_PATH/bin:\$PATH" >> $PROFILE_PATH
echo "export LD_LIBRARY_PATH=$ACTUAL_INSTALL_PATH/lib:\$LD_LIBRARY_PATH:/usr/local/lib" >> $PROFILE_PATH
echo "export MAGICK_CONFIGURE_PATH=$ACTUAL_INSTALL_PATH" >> $PROFILE_PATH
echo "-----> Done updating environment variables. All set for ImageMagick."
